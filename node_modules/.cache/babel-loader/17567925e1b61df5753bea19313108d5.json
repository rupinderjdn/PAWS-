{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rupinder\\\\Desktop\\\\PAWS+\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { data } from './util/data';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport './util/bootstrap.css'; // import './bootstrap.bundle.js';\n\nimport rootReducer from './reducers/index'; // function logger(obj, next, action)\n// const logger = function({dispatch, getState}){\n//   // this obj will contain two properties one is dispatch property and the other is getState() property\n//   return function(next){\n//     return function(action){\n//       // midleware code\n//       console.log(\"ACTION_TYPE : \",action.type);\n//       next(action);\n//     }\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst logger = _ref => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  return next => action => {\n    if (typeof action !== 'function') console.log(\"ACTION_TYPE : \", action.type);\n    next(action);\n  };\n}; // const thunk = ({dispatch, getState}) => (next) => (action) =>{\n//   if(typeof action==='function'){\n//     action(dispatch)\n//     return ;\n//   }\n//   next(action);\n// }\n\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk)); // store.dispatch(addMovies(data));\n// console.log(store.getState());\n// console.log(store.getState())\n// console.log(store)\n// store.dispatch({\n//   type:\"ADD_MOVIES\",\n//   movies\n// });\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {\n    store: store\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 3\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","createStore","applyMiddleware","thunk","data","App","reportWebVitals","rootReducer","logger","dispatch","getState","next","action","console","log","type","store","root","createRoot","document","getElementById","render"],"sources":["C:/Users/Rupinder/Desktop/PAWS+/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {data} from './util/data'\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport './util/bootstrap.css';\r\n// import './bootstrap.bundle.js';\r\nimport rootReducer from './reducers/index';\r\n// function logger(obj, next, action)\r\n// const logger = function({dispatch, getState}){\r\n//   // this obj will contain two properties one is dispatch property and the other is getState() property\r\n//   return function(next){\r\n//     return function(action){\r\n//       // midleware code\r\n//       console.log(\"ACTION_TYPE : \",action.type);\r\n//       next(action);\r\n//     }\r\n//   }\r\n// }\r\nconst logger = ({dispatch, getState}) => (next) => (action) =>{\r\n  if(typeof action!=='function')console.log(\"ACTION_TYPE : \",action.type);\r\n  next(action);\r\n}\r\n// const thunk = ({dispatch, getState}) => (next) => (action) =>{\r\n//   if(typeof action==='function'){\r\n//     action(dispatch)\r\n//     return ;\r\n//   }\r\n//   next(action);\r\n// }\r\nconst store=createStore(rootReducer, applyMiddleware(logger, thunk));\r\n// store.dispatch(addMovies(data));\r\n// console.log(store.getState());\r\n// console.log(store.getState())\r\n// console.log(store)\r\n// store.dispatch({\r\n//   type:\"ADD_MOVIES\",\r\n//   movies\r\n// });\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App store={store}/>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAQC,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,IAAR,QAAmB,aAAnB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,aAAP;AACA,OAAO,sBAAP,C,CACA;;AACA,OAAOC,WAAP,MAAwB,kBAAxB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,MAAM,GAAG;EAAA,IAAC;IAACC,QAAD;IAAWC;EAAX,CAAD;EAAA,OAA2BC,IAAD,IAAWC,MAAD,IAAW;IAC5D,IAAG,OAAOA,MAAP,KAAgB,UAAnB,EAA8BC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BF,MAAM,CAACG,IAApC;IAC9BJ,IAAI,CAACC,MAAD,CAAJ;EACD,CAHc;AAAA,CAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMI,KAAK,GAACf,WAAW,CAACM,WAAD,EAAcL,eAAe,CAACM,MAAD,EAASL,KAAT,CAA7B,CAAvB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMc,IAAI,GAAGjB,QAAQ,CAACkB,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;EAAA,uBACE,QAAC,GAAD;IAAK,KAAK,EAAEL;EAAZ;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF,E,CAMA;AACA;AACA;;AACAV,eAAe"},"metadata":{},"sourceType":"module"}