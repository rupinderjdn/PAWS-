{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { ADD_MOVIES, ADD_FAVOURITE, REMOVE_FAVOURITE, SET_SHOW_FAVOURITES, ADD_MOVIE_TO_LIST, ADD_SEARCH_RESULT, SET_SHOW_FORM, SET_PET } from '../actions';\nconst initialMoviesState = {\n  list: [],\n  favourites: [],\n  showFavourites: false,\n  showForm: false,\n  showPet: 'default'\n};\nexport function movies() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialMoviesState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // if (action.type === ADD_MOVIES) {\n  //     return {\n  //         ...state,\n  //         list : action.movies\n  //     }\n  // }\n  // return state;\n  switch (action.type) {\n    case ADD_MOVIES:\n      return { ...state,\n        list: action.movies\n      };\n\n    case SET_PET:\n      return { ...state,\n        showPet: action.movie\n      };\n\n    case ADD_FAVOURITE:\n      return { ...state,\n        favourites: [action.movie, ...state.favourites]\n      };\n\n    case REMOVE_FAVOURITE:\n      const filterArr = state.favourites.filter(movie => movie.Title !== action.movie.Title);\n      return { ...state,\n        favourites: filterArr\n      };\n\n    case SET_SHOW_FAVOURITES:\n      return { ...state,\n        showFavourites: action.val,\n        showForm: false\n      };\n\n    case ADD_MOVIE_TO_LIST:\n      return { ...state,\n        list: [action.movie, ...state.list]\n      };\n\n    case SET_SHOW_FORM:\n      return { ...state,\n        showForm: true,\n        showFavourites: false\n      };\n\n    default:\n      return state;\n  }\n}\nconst initialSearchState = {\n  result: [{}],\n  showSearchResults: false\n};\nexport function search() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialSearchState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_SEARCH_RESULT:\n      return { ...state,\n        result: action.results,\n        showSearchResults: true\n      };\n\n    case ADD_MOVIE_TO_LIST:\n      return { ...state,\n        showSearchResults: false\n      };\n\n    default:\n      return state;\n  }\n} // const initialRootState = {\n//     movies : initialMoviesState,\n//     search : initialSearchState\n// }\n// export default function rootReducer(state = initialRootState,action){\n//     return {\n//         movies : movies(state.movies, action),\n//         search : search(state.search, action)\n//     }\n// }\n\nexport default combineReducers({\n  movies,\n  search\n});","map":{"version":3,"names":["combineReducers","ADD_MOVIES","ADD_FAVOURITE","REMOVE_FAVOURITE","SET_SHOW_FAVOURITES","ADD_MOVIE_TO_LIST","ADD_SEARCH_RESULT","SET_SHOW_FORM","SET_PET","initialMoviesState","list","favourites","showFavourites","showForm","showPet","movies","state","action","type","movie","filterArr","filter","Title","val","initialSearchState","result","showSearchResults","search","results"],"sources":["C:/Users/Rupinder/Desktop/PAWS+/src/reducers/index.js"],"sourcesContent":["import {combineReducers} from 'redux'\r\nimport { ADD_MOVIES, ADD_FAVOURITE, REMOVE_FAVOURITE, SET_SHOW_FAVOURITES, ADD_MOVIE_TO_LIST, ADD_SEARCH_RESULT, SET_SHOW_FORM, SET_PET } from '../actions'\r\n\r\nconst initialMoviesState = {\r\n    list : [], \r\n    favourites : [],\r\n    showFavourites : false,\r\n    showForm : false,\r\n    showPet : 'default'\r\n}\r\nexport function movies(state = initialMoviesState, action){\r\n    // if (action.type === ADD_MOVIES) {\r\n    //     return {\r\n    //         ...state,\r\n    //         list : action.movies\r\n    //     }\r\n    // }\r\n    // return state;\r\n\r\n    switch(action.type){\r\n        case ADD_MOVIES : return {\r\n            ...state,   \r\n            list : action.movies,\r\n \r\n        }\r\n        case SET_PET : return{\r\n            ...state,\r\n            showPet : action.movie\r\n        }\r\n        \r\n        case ADD_FAVOURITE :\r\n\r\n        return {\r\n            ...state,\r\n            favourites  : [action.movie, ...state.favourites]\r\n        }\r\n\r\n        case REMOVE_FAVOURITE :\r\n            const filterArr = state.favourites.filter(\r\n                movie => movie.Title !== action.movie.Title\r\n            ) \r\n        return{\r\n            ...state,\r\n            favourites : filterArr\r\n        }\r\n        case SET_SHOW_FAVOURITES :\r\n            return {\r\n                ...state,\r\n                showFavourites : action.val,\r\n                showForm : false\r\n            }\r\n        case ADD_MOVIE_TO_LIST:\r\n            return {\r\n                ...state,\r\n                list: [action.movie, ...state.list],\r\n            };\r\n        case SET_SHOW_FORM:\r\n            return {\r\n                ...state,\r\n                showForm : true,\r\n                showFavourites : false\r\n            };\r\n        default : return state\r\n    }\r\n}\r\nconst initialSearchState = {\r\n    result : [{}],\r\n    showSearchResults : false\r\n}\r\nexport function search(state = initialSearchState, action){\r\n    switch (action.type) {\r\n        case ADD_SEARCH_RESULT:\r\n          return {\r\n            ...state,\r\n            result: action.results,\r\n            showSearchResults: true,\r\n          };\r\n        case ADD_MOVIE_TO_LIST:\r\n          return {\r\n            ...state,\r\n            showSearchResults: false,\r\n          };\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n// const initialRootState = {\r\n//     movies : initialMoviesState,\r\n//     search : initialSearchState\r\n// }\r\n// export default function rootReducer(state = initialRootState,action){\r\n//     return {\r\n//         movies : movies(state.movies, action),\r\n//         search : search(state.search, action)\r\n//     }\r\n// }\r\nexport default combineReducers({\r\n    movies,\r\n    search\r\n});"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,gBAApC,EAAsDC,mBAAtD,EAA2EC,iBAA3E,EAA8FC,iBAA9F,EAAiHC,aAAjH,EAAgIC,OAAhI,QAA+I,YAA/I;AAEA,MAAMC,kBAAkB,GAAG;EACvBC,IAAI,EAAG,EADgB;EAEvBC,UAAU,EAAG,EAFU;EAGvBC,cAAc,EAAG,KAHM;EAIvBC,QAAQ,EAAG,KAJY;EAKvBC,OAAO,EAAG;AALa,CAA3B;AAOA,OAAO,SAASC,MAAT,GAAmD;EAAA,IAAnCC,KAAmC,uEAA3BP,kBAA2B;EAAA,IAAPQ,MAAO;;EACtD;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKjB,UAAL;MAAkB,OAAO,EACrB,GAAGe,KADkB;QAErBN,IAAI,EAAGO,MAAM,CAACF;MAFO,CAAP;;IAKlB,KAAKP,OAAL;MAAe,OAAM,EACjB,GAAGQ,KADc;QAEjBF,OAAO,EAAGG,MAAM,CAACE;MAFA,CAAN;;IAKf,KAAKjB,aAAL;MAEA,OAAO,EACH,GAAGc,KADA;QAEHL,UAAU,EAAI,CAACM,MAAM,CAACE,KAAR,EAAe,GAAGH,KAAK,CAACL,UAAxB;MAFX,CAAP;;IAKA,KAAKR,gBAAL;MACI,MAAMiB,SAAS,GAAGJ,KAAK,CAACL,UAAN,CAAiBU,MAAjB,CACdF,KAAK,IAAIA,KAAK,CAACG,KAAN,KAAgBL,MAAM,CAACE,KAAP,CAAaG,KADxB,CAAlB;MAGJ,OAAM,EACF,GAAGN,KADD;QAEFL,UAAU,EAAGS;MAFX,CAAN;;IAIA,KAAKhB,mBAAL;MACI,OAAO,EACH,GAAGY,KADA;QAEHJ,cAAc,EAAGK,MAAM,CAACM,GAFrB;QAGHV,QAAQ,EAAG;MAHR,CAAP;;IAKJ,KAAKR,iBAAL;MACI,OAAO,EACH,GAAGW,KADA;QAEHN,IAAI,EAAE,CAACO,MAAM,CAACE,KAAR,EAAe,GAAGH,KAAK,CAACN,IAAxB;MAFH,CAAP;;IAIJ,KAAKH,aAAL;MACI,OAAO,EACH,GAAGS,KADA;QAEHH,QAAQ,EAAG,IAFR;QAGHD,cAAc,EAAG;MAHd,CAAP;;IAKJ;MAAU,OAAOI,KAAP;EA3Cd;AA6CH;AACD,MAAMQ,kBAAkB,GAAG;EACvBC,MAAM,EAAG,CAAC,EAAD,CADc;EAEvBC,iBAAiB,EAAG;AAFG,CAA3B;AAIA,OAAO,SAASC,MAAT,GAAmD;EAAA,IAAnCX,KAAmC,uEAA3BQ,kBAA2B;EAAA,IAAPP,MAAO;;EACtD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKZ,iBAAL;MACE,OAAO,EACL,GAAGU,KADE;QAELS,MAAM,EAAER,MAAM,CAACW,OAFV;QAGLF,iBAAiB,EAAE;MAHd,CAAP;;IAKF,KAAKrB,iBAAL;MACE,OAAO,EACL,GAAGW,KADE;QAELU,iBAAiB,EAAE;MAFd,CAAP;;IAIF;MACE,OAAOV,KAAP;EAbN;AAeH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAehB,eAAe,CAAC;EAC3Be,MAD2B;EAE3BY;AAF2B,CAAD,CAA9B"},"metadata":{},"sourceType":"module"}