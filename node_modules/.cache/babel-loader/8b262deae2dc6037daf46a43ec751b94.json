{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import{createStore,applyMiddleware}from'redux';import thunk from'redux-thunk';import{data}from'./util/data';import App from'./components/App';import reportWebVitals from'./reportWebVitals';import'./index.css';import'./util/bootstrap.css';import rootReducer from'./reducers/index';// function logger(obj, next, action)\n// const logger = function({dispatch, getState}){\n//   // this obj will contain two properties one is dispatch property and the other is getState() property\n//   return function(next){\n//     return function(action){\n//       // midleware code\n//       console.log(\"ACTION_TYPE : \",action.type);\n//       next(action);\n//     }\n//   }\n// }\nimport{jsx as _jsx}from\"react/jsx-runtime\";var logger=function logger(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;return function(next){return function(action){if(typeof action!=='function')console.log(\"ACTION_TYPE : \",action.type);next(action);};};};// const thunk = ({dispatch, getState}) => (next) => (action) =>{\n//   if(typeof action==='function'){\n//     action(dispatch)\n//     return ;\n//   }\n//   next(action);\n// }\nvar store=createStore(rootReducer,applyMiddleware(logger,thunk));// store.dispatch(addMovies(data));\n// console.log(store.getState());\n// console.log(store.getState())\n// console.log(store)\n// store.dispatch({\n//   type:\"ADD_MOVIES\",\n//   movies\n// });\nvar root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{store:store})}));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","createStore","applyMiddleware","thunk","data","App","reportWebVitals","rootReducer","logger","dispatch","getState","next","action","console","log","type","store","root","createRoot","document","getElementById","render"],"sources":["C:/Users/Rupinder/Desktop/PAWS+/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {data} from './util/data'\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport './util/bootstrap.css';\r\n\r\nimport rootReducer from './reducers/index';\r\n// function logger(obj, next, action)\r\n// const logger = function({dispatch, getState}){\r\n//   // this obj will contain two properties one is dispatch property and the other is getState() property\r\n//   return function(next){\r\n//     return function(action){\r\n//       // midleware code\r\n//       console.log(\"ACTION_TYPE : \",action.type);\r\n//       next(action);\r\n//     }\r\n//   }\r\n// }\r\nconst logger = ({dispatch, getState}) => (next) => (action) =>{\r\n  if(typeof action!=='function')console.log(\"ACTION_TYPE : \",action.type);\r\n  next(action);\r\n}\r\n// const thunk = ({dispatch, getState}) => (next) => (action) =>{\r\n//   if(typeof action==='function'){\r\n//     action(dispatch)\r\n//     return ;\r\n//   }\r\n//   next(action);\r\n// }\r\nconst store=createStore(rootReducer, applyMiddleware(logger, thunk));\r\n// store.dispatch(addMovies(data));\r\n// console.log(store.getState());\r\n// console.log(store.getState())\r\n// console.log(store)\r\n// store.dispatch({\r\n//   type:\"ADD_MOVIES\",\r\n//   movies\r\n// });\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App store={store}/>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,SAAP,KAAqB,kBAArB,CACA,OAAQC,WAAR,CAAqBC,eAArB,KAA2C,OAA3C,CACA,MAAOC,MAAP,KAAkB,aAAlB,CACA,OAAQC,IAAR,KAAmB,aAAnB,CACA,MAAOC,IAAP,KAAgB,kBAAhB,CACA,MAAOC,gBAAP,KAA4B,mBAA5B,CACA,MAAO,aAAP,CACA,MAAO,sBAAP,CAEA,MAAOC,YAAP,KAAwB,kBAAxB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;2CACA,GAAMC,OAAM,CAAG,QAATA,OAAS,UAAEC,SAAF,MAAEA,QAAF,CAAYC,QAAZ,MAAYA,QAAZ,OAA0B,UAACC,IAAD,QAAU,UAACC,MAAD,CAAW,CAC5D,GAAG,MAAOA,OAAP,GAAgB,UAAnB,CAA8BC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA6BF,MAAM,CAACG,IAApC,EAC9BJ,IAAI,CAACC,MAAD,CAAJ,CACD,CAHwC,EAA1B,EAAf,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMI,MAAK,CAACf,WAAW,CAACM,WAAD,CAAcL,eAAe,CAACM,MAAD,CAASL,KAAT,CAA7B,CAAvB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMc,KAAI,CAAGjB,QAAQ,CAACkB,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb,CACAH,IAAI,CAACI,MAAL,cACE,KAAC,KAAD,CAAO,UAAP,wBACE,KAAC,GAAD,EAAK,KAAK,CAAEL,KAAZ,EADF,EADF,EAMA;AACA;AACA;AACAV,eAAe"},"metadata":{},"sourceType":"module"}